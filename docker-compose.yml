services:
  db:
    container_name: db
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "$POSTGRES_USER", "-d", "$POSTGRES_DB" ]
      interval: 10s
      timeout: 3s
      retries: 3

  django:
    image: django
    container_name: django
    build: ./django
    depends_on:
      db:
        condition: service_healthy
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_DEBUG: ${DJANGO_DEBUG}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DJANGO_DB_NAME: ${POSTGRES_DB}
      DJANGO_DB_USER: ${POSTGRES_USER}
      DJANGO_DB_PASSWORD: ${POSTGRES_PASSWORD}
      DJANGO_DB_HOST: ${DJANGO_DB_HOST}
      DJANGO_DB_PORT: ${DJANGO_DB_PORT}
      PGPASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - app
    volumes:
      - django-data:/django
    ports:
      - 8000:8000

  # caddy:
  #   image: caddy
  #   container_name: caddy
  #   build: ./caddy
  #   # environment:
  #   #   - HOSTNAME=${HOSTNAME}
  #   #   - BACKEND_URL=${BACKEND_URL}
  #   #   - FRONTEND_URL=${FRONTEND_URL}
  #   # depends_on:
  #   #   backend:
  #   #     condition: service_healthy
  #   # networks:
  #   #   - app-frontend
  #   #   - app-backend
  #   restart: always

networks:
  app:
    name: app
    driver: bridge

volumes:
  db-data:
    name: db-data
    driver: local
  django-data:
    name: django-data
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/django
      o: bind
